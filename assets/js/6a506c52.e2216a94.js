"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4614],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7428:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={title:"Reverse proxy",sidebar_position:30},l=void 0,c={unversionedId:"admin-manual/setup/reverse-proxy",id:"admin-manual/setup/reverse-proxy",title:"Reverse proxy",description:"In some deployments, the LibreTime server is deployed behind a reverse proxy,",source:"@site/../docs/admin-manual/setup/reverse-proxy.md",sourceDirName:"admin-manual/setup",slug:"/admin-manual/setup/reverse-proxy",permalink:"/docs/admin-manual/setup/reverse-proxy",editUrl:"https://github.com/libretime/libretime/blob/main/docs/../docs/admin-manual/setup/reverse-proxy.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Reverse proxy",sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/admin-manual/setup/configuration"},next:{title:"Upgrade",permalink:"/docs/admin-manual/setup/upgrade"}},p={},u=[{value:"Reverse proxy basics",id:"reverse-proxy-basics",level:3},{value:"Setup",id:"setup",level:3},{value:"SSL Configuration",id:"ssl-configuration",level:2},{value:"Deploying a certificate with Certbot",id:"deploying-a-certificate-with-certbot",level:2},{value:"Mixed encrypted and unencrypted content",id:"mixed-encrypted-and-unencrypted-content",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In some deployments, the LibreTime server is deployed behind a reverse proxy,\nfor example in containerization use-cases such as Docker and LXC. LibreTime\nmakes extensive use of its API for some site features, which causes\n",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"},"Cross-Origin Resource Sharing (CORS)"),"\nto occur. By default, CORS requests are blocked by your browser and the origins\nneed to be added to the ",(0,a.kt)("strong",{parentName:"p"},"Allowed CORS URLs")," block in\n",(0,a.kt)("a",{parentName:"p",href:"/docs/user-manual/settings"},(0,a.kt)("strong",{parentName:"a"},"General Settings")),". These origins should include any\ndomains that are used externally to connect to your reverse proxy that you\nwant handled by LibreTime. These URLS can also be set during the first run configuration\nthat's displayed when you first install LibreTime"),(0,a.kt)("h3",{id:"reverse-proxy-basics"},"Reverse proxy basics"),(0,a.kt)("p",null,"A reverse proxy allows the LibreTime server to not be connected to the open internet. In\nthis configuration, it's rather behind another server that proxies traffic to it from\nusers. This provides some advantages in the containerization space, as this means that\nthe containers can be on their own internal network, protected from outside access."),(0,a.kt)("p",null,"A reverse proxy also allows SSL to be terminated in a single location for multiple sites.\nThis means that all your traffic to the proxy from clients is encrypted, but the reverse\nproxy's traffic to the containers on the internal network isn't. All the SSL certificates\nlive on the reverse proxy and can be renewed there instead of on the individual\ncontainers."),(0,a.kt)("h3",{id:"setup"},"Setup"),(0,a.kt)("p",null,"For SSL redirection to work, you need two domains: one for LibreTime and one for Icecast.\nHere, these will be ",(0,a.kt)("inlineCode",{parentName:"p"},"libretime.example.com")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"icecast.example.com"),"."),(0,a.kt)("p",null,"You require two VMs, servers or containers. Alternatively the reverse proxy can\nbe located on the server, proxying connections to containers also on the host. Setting up\na containerization environment is beyond the scope of this guide. It assumes that you have\nNginx set up on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," and LibreTime will be installed on ",(0,a.kt)("inlineCode",{parentName:"p"},"192.168.1.10"),". You will need root\naccess on both. ",(0,a.kt)("inlineCode",{parentName:"p"},"192.168.1.10")," also needs to be able to be accessed from ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"\n(",(0,a.kt)("inlineCode",{parentName:"p"},"ping 192.168.1.10")," on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),")."),(0,a.kt)("p",null,"On ",(0,a.kt)("inlineCode",{parentName:"p"},"192.168.1.10"),", install LibreTime as described in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/admin-manual/setup/install"},"install guide"),". Once it has installed, replace ",(0,a.kt)("inlineCode",{parentName:"p"},"<hostname>localhost</hostname>")," in\n",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/icecast2/icecast.xml")," with the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<hostname>icecast.example.com</hostname>\n")),(0,a.kt)("p",null,"This is the hostname that people listening to your stream will connect to and what\nLibreTime will use to stream out to them. You will then need to restart Icecast using ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo systemctl restart icecast2"),"."),(0,a.kt)("p",null,"On ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),", run the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'cat << EOF | sudo tee /etc/nginx/sites-available/libretime.conf\nserver {\n    listen 80;\n    server_name libretime.example.com;\n    location / {\n        rewrite ^ https://$server_name$request_uri? permanent;\n    }\n}\nserver {\n    listen 443 ssl;\n    server_name libretime.example.com;\n    ssl_certificate /etc/letsencrypt/live/libretime.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/libretime.example.com/privkey.pem;\n    add_header Strict-Transport-Security "max-age=15552000;";\n    add_header X-Frame-Options "SAMEORIGIN";\n    client_max_body_size 512M;\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_pass http://192.168.1.10/;\n    }\n}\nEOF\n')),(0,a.kt)("p",null,"This Nginx configuration ensures that all traffic uses SSL to the reverse proxy, and\ntraffic is proxied to ",(0,a.kt)("inlineCode",{parentName:"p"},"192.168.1.10"),"."),(0,a.kt)("p",null,"Next, the SSL certificate needs to be generated and the site activated."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt install certbot\nsudo systemctl stop nginx\nsudo certbot certonly -d libretime.example.com -a standalone\nsudo systemctl start nginx\n")),(0,a.kt)("p",null,"You can now go to ",(0,a.kt)("inlineCode",{parentName:"p"},"https://libretime.example.com")," and go\nthrough the installer. On ",(0,a.kt)("inlineCode",{parentName:"p"},"General Settings"),", you need to change the Webserver Port to\n",(0,a.kt)("inlineCode",{parentName:"p"},"443")," and add the following CORS URLs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://libretime.example.com\nhttp://libretime.example.com\nhttps://localhost\nhttp://localhost\n")),(0,a.kt)("p",null,"Finally, the configuration file needs updating. Under ",(0,a.kt)("inlineCode",{parentName:"p"},"[general]"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"force_ssl"),"\nneeds to be set to true:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[general]\n...\nforce_ssl = true\n")),(0,a.kt)("h2",{id:"ssl-configuration"},"SSL Configuration"),(0,a.kt)("p",null,"To increase the security of your server, you can enable encrypted access to the LibreTime administration interface, and direct your users towards this more secure login page. The main advantage of using this encryption is that your remote users' login names and passwords are not sent in plain text across the public Internet or untrusted local networks, such as shared Wi-Fi access points."),(0,a.kt)("h2",{id:"deploying-a-certificate-with-certbot"},"Deploying a certificate with Certbot"),(0,a.kt)("p",null,"One of the fastest, easiest, and cheapest ways to get an SSL certificate is through ",(0,a.kt)("a",{parentName:"p",href:"https://certbot.eff.org/"},"Certbot"),", as created by the\nElectronic Frontier Foundation. To use Certbot, your LibreTime installation must be open to the internet on port 80."),(0,a.kt)("p",null,"Follow ",(0,a.kt)("a",{parentName:"p",href:"https://certbot.eff.org/instructions"},"Certbot's documentation")," for your OS and webserver to install an SSL certificate. You'll need to renew the certificate every 90 days to keep your installation secure."),(0,a.kt)("h2",{id:"mixed-encrypted-and-unencrypted-content"},"Mixed encrypted and unencrypted content"),(0,a.kt)("p",null,"Whether your certificate is self-signed or not, you will see browser security warnings whenever a https:// page is delivering unencrypted content, such as the stream from an Icecast server. In Firefox, an exclamation mark icon is displayed in the address bar of the ",(0,a.kt)("strong",{parentName:"p"},"Listen")," pop-up."))}m.isMDXComponent=!0}}]);