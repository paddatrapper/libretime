"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7662],{1620:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));n(1839);const r={title:"Configuration",sidebar_position:20},o=void 0,s={unversionedId:"admin-manual/setup/configuration",id:"admin-manual/setup/configuration",title:"Configuration",description:"To configure LibreTime, you need to edit the /etc/libretime/config.yml file. This page describe the available options to configure your installation.",source:"@site/../docs/admin-manual/setup/configuration.md",sourceDirName:"admin-manual/setup",slug:"/admin-manual/setup/configuration",permalink:"/docs/next/admin-manual/setup/configuration",draft:!1,editUrl:"https://github.com/libretime/libretime/blob/main/docs/../docs/admin-manual/setup/configuration.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Configuration",sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/docs/next/admin-manual/setup/install"},next:{title:"Reverse proxy",permalink:"/docs/next/admin-manual/setup/reverse-proxy"}},l={},d=[{value:"General",id:"general",level:2},{value:"Storage",id:"storage",level:2},{value:"Database",id:"database",level:2},{value:"RabbitMQ",id:"rabbitmq",level:2},{value:"Playout",id:"playout",level:2},{value:"LDAP",id:"ldap",level:2}],p={toc:d};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To configure LibreTime, you need to edit the ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/libretime/config.yml")," file. This page describe the available options to configure your installation."),(0,i.kt)("h2",{id:"general"},"General"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"general")," section configure anything related to the legacy and API services."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'general:\n  # The public url.\n  # > this field is REQUIRED\n  public_url: "https://example.com"\n  # The internal API authentication key.\n  # > this field is REQUIRED\n  api_key: "some_random_generated_secret!"\n\n  # List of origins allowed to access resources on the server, the public url\n  # origin is automatically included.\n  # > default is []\n  allowed_cors_origins: []\n\n  # How many hours ahead Playout should cache scheduled media files.\n  # > default is 1\n  cache_ahead_hours: 1\n\n  # Authentication adaptor to use for the legacy service, specify a class like\n  # LibreTime_Auth_Adaptor_FreeIpa to replace the built-in adaptor.\n  # > default is local\n  auth: "local"\n')),(0,i.kt)("p",null,"In order to apply the changes made in this section, please restart the following services:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"libretime-analyzer\nlibretime-api\nlibretime-playout\nlibretime-worker\n")),(0,i.kt)("h2",{id:"storage"},"Storage"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"storage")," section configure the project storage."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'storage:\n  # Path of the storage directory.\n  # > default is /srv/libretime\n  path: "/srv/libretime"\n')),(0,i.kt)("p",null,"In order to apply the changes made in this section, please restart the following services:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"libretime-api\n")),(0,i.kt)("h2",{id:"database"},"Database"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"database")," section configure the PostgreSQL connection."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Before editing this section be sure to update the PostgreSQL server with the desired values."),(0,i.kt)("h4",{parentName:"admonition",id:"changing-a-postgresql-user-password"},"Changing a PostgreSQL user password"),(0,i.kt)("p",{parentName:"admonition"},"You can change the ",(0,i.kt)("inlineCode",{parentName:"p"},"libretime")," PostgreSQL user password using:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo -u postgres psql -c \"ALTER USER libretime PASSWORD 'new-password';\"\n"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'database:\n  # The hostname of the PostgreSQL server.\n  # > default is localhost\n  host: "localhost"\n  # The port of the PostgreSQL server.\n  # > default is 5432\n  port: 5432\n  # The name of the PostgreSQL database.\n  # > default is libretime\n  name: "libretime"\n  # The username of the PostgreSQL user.\n  # > default is libretime\n  user: "libretime"\n  # The password of the PostgreSQL user.\n  # > default is libretime\n  password: "some_random_generated_secret!"\n')),(0,i.kt)("p",null,"In order to apply the changes made in this section, please restart the following services:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"libretime-api\n")),(0,i.kt)("h2",{id:"rabbitmq"},"RabbitMQ"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"rabbitmq")," section configure the RabbitMQ connection."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Before editing this section be sure to update the RabbitMQ server with the desired values."),(0,i.kt)("h4",{parentName:"admonition",id:"changing-a-rabbitmq-user-password"},"Changing a RabbitMq user password"),(0,i.kt)("p",{parentName:"admonition"},"You can change the ",(0,i.kt)("inlineCode",{parentName:"p"},"libretime")," RabbitMQ user password using:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'sudo rabbitmqctl change_password "libretime" "new-password"\n'))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'rabbitmq:\n  # The hostname of the RabbitMQ server.\n  # > default is localhost\n  host: "localhost"\n  # The port of the RabbitMQ server.\n  # > default is 5672\n  port: 5672\n  # The virtual host of RabbitMQ server.\n  # > default is /libretime\n  vhost: "/libretime"\n  # The username of the RabbitMQ user.\n  # > default is libretime\n  user: "libretime"\n  # The password of the RabbitMQ user.\n  # > default is libretime\n  password: "some_random_generated_secret!"\n')),(0,i.kt)("p",null,"In order to apply the changes made in this section, please restart the following services:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"libretime-analyzer\nlibretime-api\nlibretime-playout\nlibretime-worker\n")),(0,i.kt)("h2",{id:"playout"},"Playout"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"playout")," section configure anything related to the playout service."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'playout:\n  # Liquidsoap connection host.\n  # > default is localhost\n  liquidsoap_host: "localhost"\n  # Liquidsoap connection port.\n  # > default is 1234\n  liquidsoap_port: 1234\n\n  # The format for recordings.\n  # > must be one of (ogg, mp3)\n  # > default is ogg\n  record_file_format: ogg\n  # The bitrate for recordings.\n  # > default is 256\n  record_bitrate: 256\n  # The samplerate for recordings.\n  # > default is 44100\n  record_samplerate: 44100\n  # The number of channels for recordings.\n  # > default is 2\n  record_channels: 2\n  # The sample size for recordings.\n  # > default is 16\n  record_sample_size: 16\n')),(0,i.kt)("p",null,"In order to apply the changes made in this section, please restart the following services:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"libretime-playout\n")),(0,i.kt)("h2",{id:"ldap"},"LDAP"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ldap")," section provide additional configuration for the authentication mechanism defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"general.auth"),", please see the ",(0,i.kt)("a",{parentName:"p",href:"/docs/next/admin-manual/custom-authentication"},"custom authentication documentation")," for more details."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'ldap:\n  # Hostname of LDAP server.\n  hostname: "ldap.example.org"\n  # Complete DN of user used to bind to LDAP.\n  binddn: "uid=libretime,cn=sysaccounts,cn=etc,dc=int,dc=example,dc=org"\n  # Password for binddn user.\n  password: "hackme"\n  # Domain part of username.\n  account_domain: "INT.EXAMPLE.ORG"\n  # Base search DN.\n  basedn: "cn=users,cn=accounts,dc=int,dc=example,dc=org"\n  # Name of the uid field for searching. Usually uid, may be cn.\n  filter_field: "uid"\n\n  # Map user types to LDAP groups. Assign user types based on the group of a given user\n  # Key format is groupmap_*.\n  groupmap_superadmin: "cn=superadmin,cn=groups,cn=accounts,dc=int,dc=example,dc=org"\n  groupmap_admin: "cn=admin,cn=groups,cn=accounts,dc=int,dc=example,dc=org"\n  groupmap_program_manager: "cn=program_manager,cn=groups,cn=accounts,dc=int,dc=example,dc=org"\n  groupmap_host: "cn=host,cn=groups,cn=accounts,dc=int,dc=example,dc=org"\n  groupmap_guest: "cn=guest,cn=groups,cn=accounts,dc=int,dc=example,dc=org"\n')))}u.isMDXComponent=!0}}]);