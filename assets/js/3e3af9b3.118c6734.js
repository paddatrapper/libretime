"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7662],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(n),d=i,h=u["".concat(l,".").concat(d)]||u[d]||c[d]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var m=2;m<r;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1620:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return p},default:function(){return u}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],s={title:"Configuration",sidebar_position:20},l=void 0,m={unversionedId:"admin-manual/setup/configuration",id:"admin-manual/setup/configuration",title:"Configuration",description:"The streaming host configuration for LibreTime is shown in the file /etc/airtime/liquidsoap.cfg which is automatically generated by the Streams page, found on the System menu of the LibreTime administration interface. For this reason, you would not normally edit the streaming configuration manually, as any changes are likely to be overwritten by the administration interface.",source:"@site/../docs/admin-manual/setup/configuration.md",sourceDirName:"admin-manual/setup",slug:"/admin-manual/setup/configuration",permalink:"/docs/admin-manual/setup/configuration",editUrl:"https://github.com/libretime/libretime/blob/main/docs/../docs/admin-manual/setup/configuration.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Configuration",sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/docs/admin-manual/setup/install"},next:{title:"Reverse proxy",permalink:"/docs/admin-manual/setup/reverse-proxy"}},p=[{value:"Database and RabbitMQ hosts",id:"database-and-rabbitmq-hosts",children:[],level:2},{value:"Apache max file size configuration",id:"apache-max-file-size-configuration",children:[],level:2},{value:"Playout settings",id:"playout-settings",children:[],level:2},{value:"RabbitMQ hostname changes",id:"rabbitmq-hostname-changes",children:[],level:2}],c={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The streaming host configuration for LibreTime is shown in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/airtime/liquidsoap.cfg")," which is automatically generated by the ",(0,r.kt)("strong",{parentName:"p"},"Streams")," page, found on the ",(0,r.kt)("strong",{parentName:"p"},"System")," menu of the LibreTime administration interface. For this reason, you would not normally edit the streaming configuration manually, as any changes are likely to be overwritten by the administration interface."),(0,r.kt)("h2",{id:"database-and-rabbitmq-hosts"},"Database and RabbitMQ hosts"),(0,r.kt)("p",null,"Optionally, you may wish to edit the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/airtime/airtime.conf")," to set the PostgreSQL database host, and the username and password to connect to the database with."),(0,r.kt)("p",null,"You can also set options for RabbitMQ messaging and the LibreTime server in this file, although you shouldn't normally need to adjust the defaults unless you are running a large LibreTime system distributed across multiple servers. To run the LibreTime server in demo mode, which changes the greeting on the login page and prevents user accounts from being created or modified, set the value of ",(0,r.kt)("em",{parentName:"p"},"demo")," to 1."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini",metastring:'title="/etc/airtime/airtime.conf"',title:'"/etc/airtime/airtime.conf"'},"[database]\nhost = localhost\nport = 5432\nname = libretime\nuser = libretime\npassword = libretime\n\n[rabbitmq]\nhost = 127.0.0.1\nport = 5672\nuser = airtime\npassword = XXXXXXXXXXXXXXXXXXXX\nvhost = /airtime\n\n[general]\napi_key = XXXXXXXXXXXXXXXXXXXXX\nweb_server_user = www-data\nairtime_dir = /usr/share/airtime\nbase_url = libretime.example.com\nbase_port = 80\nbase_dir = /\ncache_ahead_hours = 1\n\n[monit]\nmonit_user = guest\nmonit_password = airtime\n\n[demo]\ndemo = 0\n")),(0,r.kt)("p",null,"Save and close the file then, run the following commands to restart LibreTime's services:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart libretime-liquidsoap\nsudo systemctl restart libretime-playout\nsudo systemctl restart libretime-celery\nsudo systemctl restart libretime-analyzer\n")),(0,r.kt)("h2",{id:"apache-max-file-size-configuration"},"Apache max file size configuration"),(0,r.kt)("p",null,"By default, the maximum upload file size is 40 MB, which may not be large enough for some stations, especially if they're uploading prerecorded shows. The setting for this is located in ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/apache2/sites-available/airtime.config"),". Search for and update the following in megabytes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"; Maximum allowed size for uploaded files.\nupload_max_filesize = 40M\n\n; Must be greater than or equal to upload_max_filesize\npost_max_size = 40M\n")),(0,r.kt)("p",null,"For quick reference, 1024 MB = 1 GB and 2048 MB = 2 GB, but most should be okay with rounding to the nearest thousand. After updating the config file, restart Apache with ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo systemctl restart apache2"),"."),(0,r.kt)("h2",{id:"playout-settings"},"Playout settings"),(0,r.kt)("p",null,"Settings for pypo, the playout engine used by LibreTime, are found in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/airtime/airtime.conf"),". After making changes to this file, run ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo systemctl restart libretime-playout"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"############################################\n# pypo - configuration                     #\n############################################\n# Set the type of client you are using.\n# Currently supported types:\n# 1) \"obp\" = Open Broadcast Platform\n# 2) \"airtime\"\n#\napi_client = airtime\n\n############################################\n# Cache Directories                        #\n# *include* trailing slash !!              #\n############################################\ncache_dir = /var/tmp/airtime/pypo/cache/\nfile_dir = /var/tmp/airtime/pypo/files/\ntmp_dir = /var/tmp/airtime/pypo/tmp/\n\n############################################\n# Setup Directories                        #\n# Do *not* include trailing slash !!       #\n############################################\ncache_base_dir = /var/tmp/airtime/pypo\nbin_dir = /usr/lib/airtime/pypo\nlog_base_dir = /var/log/airtime\npypo_log_dir = /var/log/airtime/pypo\nliquidsoap_log_dir = /var/log/airtime/pypo-liquidsoap\n\n############################################\n# Liquidsoap settings                      #\n############################################\nls_host = 127.0.0.1\nls_port = 1234\n\n############################################\n# RabbitMQ settings                        #\n############################################\nrabbitmq_host = localhost\nrabbitmq_user = airtime\nrabbitmq_password = XXXXXXXXXXXXXXXXXXXX\nrabbitmq_vhost = /airtime\n\n############################################\n# pypo preferences                         #\n############################################\n# Poll interval in seconds.\n#\n# This will rarely need to be changed because any schedule changes are\n# automatically sent to pypo immediately.\n#\n# This is how often the poll script downloads new schedules and files from the\n# server in the event that no changes are made to the schedule.\n#\npoll_interval = 3600# in seconds.\n\n# Push interval in seconds.\n#\n# This is how often the push script checks whether it has something new to\n# push to liquidsoap.\n#\n# It's hard to imagine a situation where this should be more than 1 second.\n#\npush_interval = 1# in seconds\n\n# 'pre' or 'otf'. 'pre' cues while playlist preparation\n# while 'otf' (on the fly) cues while loading into ls\n# (needs the post_processor patch)\ncue_style = pre\n")),(0,r.kt)("h2",{id:"rabbitmq-hostname-changes"},"RabbitMQ hostname changes"),(0,r.kt)("p",null,"If the Airtime logs indicate failures to connect to the RabbitMQ server, such as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2013-10-31 08:21:11,255 ERROR - [pypomessagehandler.py : main() : line\n99] - Error connecting to RabbitMQ Server. Trying again in few seconds\n\n2013-10-31 08:21:11,255 ERROR - \\[pypomessagehandler.py : main() : line 99\\] - Error connecting to RabbitMQ Server. Trying again in few seconds - See more at: https://forum.sourcefabric.org/discussion/16050/#sthash.W8OJrNFm.dpuf\n")),(0,r.kt)("p",null,"but the RabbitMQ server is running normally, this error might be due to a change in the server's hostname since LibreTime installation. Directory names under ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/lib/rabbitmq/mnesia/")," indicate that RabbitMQ's database files are organized according to the hostname of the server (ex. ",(0,r.kt)("inlineCode",{parentName:"p"},"rabbit@airtime"),") where the hostname is ",(0,r.kt)("inlineCode",{parentName:"p"},"airtime.example.com"),". If the hostname has changed, it may be necessary to reconfigure RabbitMQ manually, as follows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Delete the files in ",(0,r.kt)("inlineCode",{parentName:"li"},"/var/lib/rabbitmq/mnesia/"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm -r /var/lib/rabbitmq/mnesia/*\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Restart RabbitMQ:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart rabbitmq-server\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Enter the following commands to set up authentication and grant permissions. The ",(0,r.kt)("em",{parentName:"li"},"rabbitmqctl add_user")," command requires the RabbitMQ password from the /etc/airtime/airtime.conf file as an argument. The ",(0,r.kt)("em",{parentName:"li"},"rabbitmqctl set_permissions")," command should be entered on one line, with the list of Airtime services repeated three times:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'rabbitmqctl add_vhost /airtime\nrabbitmqctl add_user airtime XXXXXXXXXXXXXXXXXXXX\nrabbitmqctl set_permissions -p /airtime airtime\n   "airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor"\n   "airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor"\n   "airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor"\n')))}u.isMDXComponent=!0}}]);